/* Stardew Valley Item Finder
 * https://gucci-on-fleek.github.io/Stardew-Valley-Item-Finder/
 * SPDX-License-Identifier: MPL-2.0+
 * SPDX-FileCopyrightText: 2021 gucci-on-fleek
 */

:root {
  --color-primary: hsl(103, 70%, 30%);
  --color-primary-accent: hsl(105, 30%, 56%);
  --color-primary-darker: hsl(103, 70%, 27%);
  --color-secondary: hsl(193, 86%, 32%);
  --color-text: hsl(103, 100%, 95%);
  --table-separator-length: 20px;
}

@keyframes spin {
  from {
    transform: rotate(0deg) scale(3);
  }

  to {
    transform: rotate(30deg) scale(3);
  }
}

@font-face { /* Fira has a sense of "fun" that the OS default fonts don't, so I think that it's worth the extra download size */
  font-weight: normal;
  font-family: 'FiraGo';
  font-style: normal;
  src: url("assets/FiraGO-Book.woff2") format('woff2');
}

@font-face {
  font-weight: bold;
  font-family: 'FiraGo';
  font-style: normal;
  src: url("assets/FiraGO-Medium.woff2") format('woff2');
}

@font-face {
  font-weight: normal;
  font-family: 'FiraGo';
  font-style: italic;
  src: url("assets/FiraGO-BookItalic.woff2") format('woff2');
}

@font-face {
  font-weight: bold;
  font-family: 'FiraGo';
  font-style: italic;
  src: url("assets/FiraGO-MediumItalic.woff2") format('woff2');
}

@font-face {
  font-weight: 100 900;
  font-family: 'Fira Code';
  src: url("assets/FiraCode.woff2") format('woff2');
}

:root::before { /* There was a lot of trial and error here to get this to work. Be weary to make even small changes */
  position: fixed;
  top: calc(50vh - 50vmin);
  left: calc(50vw - 50vmin);
  z-index: -1;
  width: 100vmin;
  height: 100vmin;
  background:
    var(--color-primary)
    repeating-conic-gradient(hsla(0, 0%, 0%, 0.1) 0 15deg, transparent 0 30deg);
  animation: spin 15s infinite linear;
  content: "";
}

[hidden] {
  /* Ensure that 'hidden' elements are really hidden */
  display: none !important;
}

[hidden][aria-hidden="false"] {
  /* Make hidden elements with aria-hidden=false only visible to screen readers */
  position: absolute;
  display: initial !important;
  clip: rect(0, 0, 0, 0);
  clip-path: inset(100%);
}

@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    transition-duration: 0.01ms !important;
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
  }
}

@media print {
  /* Only print the table, and in black and white */
  :root {
    --color-primary: white;
    --color-text: black;
  }

  .text,
  h2,
  input,
  header,
  footer,
  label,
  th:not([aria-sort])::after {
    display: none !important;
  }

  table {
    font-size: 10pt;
  }

  thead tr :is(th, td) {
    position: inherit !important;
  }

  body {
    margin: 0 !important;
  }

  *,
  *::before,
  *::after {
    background: white !important;
    box-shadow: none !important;
  }
}

*,
*::before,
*::after {
  box-sizing: border-box;
  text-rendering: optimizeLegibility;
}

input,
button,
textarea,
select {
  font-family: inherit;
}

html {
  color: var(--color-text);
}

a:link,
details.license summary {
  /* It's hard to find a blue/cyan with acceptable contrast against the green background, so let's use small caps for links instead */
  color: var(--color-text);
  font-size: 0.95em;
  letter-spacing: 0.2em;
  text-decoration: none;
  font-variant-caps: all-small-caps;
  box-shadow: 0 1px 0 var(--color-primary-accent);
}

:is(a, details.license summary):hover {
  box-shadow: 0 3px 0 var(--color-text);
}

body {
  /* Center all content in the viewport */
  display: grid;
  justify-items: center;
  margin: var(--page-margin);
  font-size: 1.0625rem; /* 17px */

  /* Use the default system-ui font, when available */
  font-family: 'FiraGO', ui-sans-serif, sans-serif;
  line-height: 1.4; /* Slight Enlargement */
  hyphens: auto;
  font-variant-ligatures: common-ligatures contextual;
  font-kerning: normal;

  --page-margin: 15px;
}

:root { /* stylelint-disable-line no-duplicate-selectors */
  /* Style scrollbars (Standards-based, currently Firefox only) */
  scrollbar-width: thin;
  scrollbar-color: var(--color-primary-accent) var(--color-primary);
}

/* Chrome fallbacks */
/* stylelint-disable no-descending-specificity */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: var(--color-primary);
}

::-webkit-scrollbar-thumb {
  background-color: var(--color-primary-accent);
}
/* stylelint-enable no-descending-specificity */

h1 {
  margin-bottom: 0;

  /* Add a horizontal rule below the title */
  padding-bottom: 0.1em;
  border-bottom: 1px solid var(--color-primary-accent);
}

table {
  margin-right: calc(-1 * var(--table-separator-length));
  margin-left: calc(-1 * var(--table-separator-length));
  overflow-wrap: anywhere;
  table-layout: auto;
  border-spacing: 0;
  text-rendering: optimizeSpeed;

  /* Monospaced numerals */
  font-variant-numeric: tabular-nums;
}

@media (max-width: 45em) {
  /* For Mobile */
  :root {
    --table-separator-length: 2px;
  }

  :is(td,th):nth-of-type(5) {
    /* Need extra space between Count and Location */
    padding-left: 5px;
  }

  th:nth-of-type(2):not(:focus):not(:active) {
    /* Hide quality header when in a tight space */
    font-size: 0;
  }
}

thead,
tfoot {
  font-weight: bold;
}

th {
  text-align: left;
  vertical-align: bottom;
}

td,
th {
  padding-top: 2px;

  /* We're doubling the right padding with zero left padding instead
   * of having single left and right padding because this will give us
   * more room for the sorting arrows on the right without being occluded.
   */
  padding-right: calc(2 * var(--table-separator-length));
  padding-bottom: 2px;
  padding-left: 0;
}

thead tr th,
tfoot tr td {
  /* Have the header/footer of the table stay in the viewport */
  position: -webkit-sticky;
  position: sticky;
  z-index: 5;

  /* The sticky headers/footers need to be above the rest of the table, so they need to have a filled background. We can't just copy the same pinwheel to the front, so a solid colour is the best compromise */
  background-color: var(--color-primary-darker);

  /* We need to fill behind the arrows */
  box-shadow: 1em 0 0 0 var(--color-primary-darker), -1em 0 0 0 var(--color-primary-darker);
}

tbody tr:nth-child(odd) {
  /* The table looks kinda funny with a solid colour behind it, but it also looks bad with the solid headings and a spinning background. I guess that we might as well stripe the table? Feeling pretty conflicted */
  background-color: var(--color-primary);
  box-shadow: 1em 0 0 0 var(--color-primary), -1em 0 0 0 var(--color-primary);
}

tbody tr:nth-child(even) {
  background-color: var(--color-primary-darker);
  box-shadow: 1em 0 0 0 var(--color-primary-darker), -1em 0 0 0 var(--color-primary-darker);
}

tfoot tr td {
  bottom: 0;
}

thead tr th {
  top: 0;
  cursor: pointer;
}

:is(td, th):first-of-type { /* Fix the left/right paddings for the first/last columns */
  padding-left: var(--table-separator-length);
}

:is(td, th):last-of-type {
  padding-right: var(--table-separator-length);
}

th[aria-sort=ascending]::after {
  content: " ↑"; /* Thin no-break space + up arrow */
}

th[aria-sort=descending]::after {
  content: " ↓"; /* Thin no-break space + down arrow */
}

th:not([aria-sort])::after {
  opacity: 0.75;
  content: " ↕"; /* Thin no-break space + up/down arrow */
}

th::after { /* stylelint-disable-line no-descending-specificity */
  display: inline-block;
  width: 0;
  height: 0;
  font-weight: bolder;
  white-space: nowrap;
  text-decoration: none;
}

th:focus {
  text-decoration: underline;
  outline: none;
}

td:nth-of-type(3),
td:nth-of-type(4),
td:nth-of-type(6),
th:nth-of-type(3),
th:nth-of-type(4),
th:nth-of-type(6) {
  /* Numeric columns should be right-aligned */
  text-align: right;

  /* Don't wrap numeric columns */
  overflow-wrap: normal;
}

code {
  font-weight: 375;
  font-family: 'Fira Code', ui-monospace, monospace;
  font-variant: no-contextual;
  letter-spacing: 0.05em;
  overflow-wrap: anywhere;
}

section,
header,
footer,
article {
  /* Don't want really wide text */
  --max-page-width: 50em;

  display: block;
  width: 100%;
  max-width: var(--max-page-width);
}

#filter {
  margin-left: 50px;
}

.icon {
  height: 1em;
}

code.block {
  display: block;
  max-width: 100%;
}

footer {
  margin-top: 1em;
  padding-top: 0;
  border-top: 1px solid var(--color-primary-accent);
}

footer ul {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-end;
  margin: 0;
  padding: 0;
}

footer ul li {
  display: inline;
  list-style-type: none;
}

footer li:not(:last-child)::after {
  content: " • ";
}

abbr {
  text-decoration: none;
  font-variant-caps: all-small-caps;
  font-variant-numeric: oldstyle-nums;
}

dl {
  display: grid;
  grid-template-columns: fit-content(20%) 1fr;
  justify-items: start;
  margin: 0 0 0 0;
  margin-left: 1em;
  padding-inline-start: 40px;
}

dt {
  display: list-item;
  grid-column-start: 1;
}

dd {
  display: inline;
  grid-column-start: 2;
  margin-left: 1em;
}

.message {
  font-weight: bold;
  font-size: 2em;
  letter-spacing: 2.5px;
}

.message > * {
  font-weight: initial;
  font-size: initial;
  font-style: italic;
  letter-spacing: initial;
}

.item_description > td {
  max-width: 0;
  padding: 10px 15px;
  border: 3px solid var(--color-primary-accent);
  border-radius: 30px;
}

details.license summary {
  /* Hide the "open here" triangle */
  list-style: none;

  /* Make the summary look like a URL */
  cursor: pointer;
}

details.license summary::-webkit-details-marker {
  display: none;
}

details.license[open] > summary {
  /* Remove the summary once it has been expanded */
  display: none;
}

details.license[open] {
  /* Show the opened details below the footer */
  position: absolute;

  /* Align the details with the rest of the content  */
  left: max((100% - var(--max-page-width)) / 2, var(--page-margin));
  max-width: var(--max-page-width);
}

[role=button] {
  position: relative;
  padding: 1ex;
  overflow: hidden;
  font-size: 125%;
  border: 2px solid var(--color-primary-accent);
  border-radius: 1em;
}

[role=button]::before {
  position: absolute;
  top: -50%;
  left: -50%;
  z-index: -1;
  width: 200%;
  height: 200%;
  background-color: var(--color-secondary);
  content: "";
}

[role=button]:is(:hover, :focus)::before,
input[type=file]:focus + [role=button]::before {
  background:
    var(--color-secondary)
    repeating-conic-gradient(hsla(0, 0%, 0%, 0.1) 0 15deg, transparent 0 30deg);
  animation: spin 2s infinite linear;
}

[role=button]:hover,
[role=button]:focus,
input[type=file]:focus + [role=button] {
  color: var(--color-text);
  outline: none;
  box-shadow: 0 0 0 3px var(--color-primary-accent);
  cursor: pointer;
}

::selection {
  background-color: var(--color-secondary);
}

:focus-visible {
  border-radius: 4px;
  outline: 2px solid var(--color-text);
  outline-offset: 2px;
}
